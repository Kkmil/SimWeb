@page
@model SimulationModel
@{
    ViewData["Title"] = "Prezentacja";
}

<p>Rozmiar prezentowanej mapy 8x6</p>

<style>
    .map {
    grid-template-columns: max-content repeat( @Model.SizeX, max-content);
    grid-template-rows: repeat( @Model.SizeY, 1fr) max-content;
    }
    
</style>



<div class="container text-center">
    
    @if(Model.IsGeneratable){
    <div class="map">
        @for (int y = Model.SizeY - 1; y >= -1; y--)
        {
            if (y >= 0)
            {
                <p>@y</p>
                @for (int x = 0; x < Model.SizeX; x++)
                {
                    <div class="grid-item">
                        @if (@Model.Symbols.ContainsKey(new Simulator.Point(x, y)))
                        {
                            if (@Model.Symbols[new Simulator.Point(x, y)] == 'H')
                            {
                                <img src="~/lib/images/H.jpg" style="width:60px" alt="Hill" />
                            }
                            else if (@Model.Symbols[new Simulator.Point(x, y)] == 'F')
                            {
                                <img src="~/lib/images/M.jpg" style="width:60px" alt="Fog" />
                            }
                            else if (@Model.Symbols[new Simulator.Point(x, y)] == 'W')
                            {
                                <img src="~/lib/images/W.jpg" style="width:60px" alt="Water" />
                            }
                            else if (@Model.Symbols[new Simulator.Point(x, y)] == 'L')
                            {
                                <img src="~/lib/images/L.jpg" style="width:60px" alt="Lava" />
                            }

                                else if (@Model.Symbols[new Simulator.Point(x, y)] == '•')

                                {
                                <img src="~/lib/images/sword.png" style="width:40px" alt="sword" />
                            }
                            else if (@Model.Symbols[new Simulator.Point(x, y)] == 'O')
                            {
                                <img src="~/lib/images/orc.jpg" style="width:40px" alt="sword" />
                            }
                            else if (@Model.Symbols[new Simulator.Point(x, y)] == 'E')
                            {
                                <img src="~/lib/images/archer.jpg" style="width:40px" alt="sword" />
                            }
                            else
                            {
                                <p>@Model.Symbols[new Simulator.Point(x, y)]</p>
                            }
                        }
                    </div>
                }
            }
            else
            {
                <span></span>
                @for (int x = 0; x < Model.SizeX; x++)
                {
                    <span>@x</span>
                }
            }
        }
            
            
    </div>
        

        <div class="turns">
            <h1>Ruch @Model.CurrentTurnIndex</h1>
            <a asp-page="/Simulation" asp-route-Turn="@(Model.CurrentTurnIndex == 0 ? 0 : Model.CurrentTurnIndex - 1)" class="@(Model.CurrentTurnIndex == 0 ? "disabled" : "")">
                <button class="btn @(Model.CurrentTurnIndex == 0 ? "disabled" : "")">&lt- Wstecz</button>
            </a>
            <a asp-page="/Simulation" asp-route-Turn="@(Model.CurrentTurnIndex == Model.TurnCounter ? Model.TurnCounter : Model.CurrentTurnIndex + 1)" class="@(Model.CurrentTurnIndex == Model.TurnCounter ? "disabled" : "")">
                <button class="btn @(Model.CurrentTurnIndex == Model.TurnCounter ? "disabled" : "")">Rusz -&gt</button>
            </a>
        </div>
        <div class="instructions">
            <h2>@Model.Mappable => @Model.Move</h2>
            <h2>@Html.Raw(Model.SimulationMessage.Replace("\n", "<br>"))</h2>
        </div>
    
    }
    else
    {
        <h4 class="mx-2 text-center mt-5">Simulation error! Return to the start page:</h4>
        <a asp-page="/Index">
            <button class="btn btn-secondary btn-primary">&olarr;</button>
        </a>
    }
</div>